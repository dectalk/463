/* PH Rom file
 * 
 * Copyright Information:
 * 
 *                           Copyright (c)
 *    Copyright © 2002 Fonix Corporation. All rights reserved.
 *    Copyright © 2000-2001 Force Computers, a Solectron Company. All rights reserved.
 *    © Digital Equipment Corporation 1996, 1997, 1998. All rights reserved.
 * 
 *    Restricted Rights: Use, duplication, or disclosure by the U.S.
 *    Government is subject to restrictions as set forth in subparagraph
 *    (c) (1) (ii) of DFARS 252.227-7013, or in FAR 52.227-19, or in FAR
 *    52.227-14 Alt. III, as applicable.
 * 
 * 
 *    This software is proprietary to and embodies the confidential
 *    technology of Fonix Corporation and other parties.
 *    Possession, use, or copying of this software and media is authorized
 *    only pursuant to a valid written license from Fonix or an
 *    authorized sublicensor.
 * 
 * Based on Dennis Klatt's PHRom File Format  Copyright (c) 1988 by Dennis Klatt
 *
 * Compile Type: Compiled from (0/0)
 * Program: PHEdit(2)
 * Author: Kevin Bruckert
 *
 * {{START_COMMENT_BLOCK}}
 * kevinb - Initial Creation
 * bruckert - [0] fixed p back locus and nf2 with Cris
 * bruckert - [0] modified f per chris
 * bruckert - [0] ipi problem with p 
 * bruckert - [0] 
 * bruckert - [0] spanish tuning
 * bruckert - [0] 
 * bruckert - [0] lili
 * bruckert - [0] f3 t locus bring f3 too close to f2 on front vowels 
 * bruckert - [0] fson1 not marked added
 * bruckert - [0] kh and g f1 ->180
 * bruckert - [0] 
 * bruckert - [0] 
 * Ebruckert - [0] atopaqa weren't marked
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] t burst to 7
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] R INHDUR TO 65
 * Ebruckert - [0] LL WAS MARKED AS AN OBSTRUENT PLOSIVE?????
 * bruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * barthols - [0] 
 * barthols - [0] 
 * barthols - [0] 
 * barthols - [0] 
 * barthols - [0] 
 * barthols - [0] 
 * barthols - [0] 
 * barthols - [0] 
 * ebruckert - [0] 
 * ebruckert - [0] 
 * ebruckert - [0] 
 * ebruckert - [0] 
 * ebruckert - [0] 
 * ebruckert - [0] 
 * ebruckert - [0] 
 * ebruckert - [0] 
 * ebruckert - [0] 
 * ebruckert - [0] 
 * ebruckert - [0] 
 * ebruckert - [0] 
 * ebruckert - [0] 
 * Ed - [0] 
 * Ed - [0] 
 * Ed - [0] 
 * Ed - [0] 
 * ebruckert - [0] 
 * ebruckert - [0] 
 * Ed - [0] 
 * Ed - [0] 
 * Ed - [0] 
 * ebruckert - [0] 
 * ebruckert - [0] 
 * ebruckert - [0] 
 * ebruckert - [0] 
 * ebruckert - [0] 
 * ebruckert - [0] 
 * ebruckert - [0] 
 * ebruckert - [0] 
 * ebruckert - [0] 
 * ebruckert - [0] 
 * Ed - [0] 
 * Ed - [0] 
 * Ed - [0] 
 * Ed - [0] 
 * Ed - [0] 
 * Ed - [0] 
 * Ed - [0] 
 * Ed - [0] 
 * Ed - [0] 
 * Ed - [0] 
 * Ed - [0] 
 * Ed - [0] 
 * Ed - [0] 
 * Ed - [0] 
 * Ed - [0] 
 * barthols - [0] 
 * barthols - [0] put in 2 targets for each formant per dome's measurements
 * barthols - [0] ep, 3 targets
 * barthols - [0] measured uw, natalino
 * barthols - [0] 
 * barthols - [0] v - matched data from 88_mal.phd
 * barthols - [0] new locus data for front
 * barthols - [0] raising locus for front
 * barthols - [0] l - transdur from 30 to 50
 * barthols - [0] 
 * barthols - [0] 
 * barthols - [0] added formant values for g, per Ed's email.
 * barthols - [0] locus changes to g, per phrom88
 * barthols - [0] 
 * barthols - [0] matched d locus for front vowels with phrom.88
 * barthols - [0] matched all locus numbers for d with phrom.88
 * barthols - [0] d - matched formants and AV to 88_mal.phd
 * barthols - [0] matched t to 88_mal
 * barthols - [0] jh mapped to 88
 * barthols - [0] 
 * ebruckert - [0] 
 * ebruckert - [0] 
 * ebruckert - [0] 
 * ebruckert - [0] 
 * ebruckert - [0] new values from www.helsinki.fi/hum/projektit/vokartat_eng.html
 * ebruckert - [0] 
 * ebruckert - [0] 
 * ebruckert - [0] 
 * ebruckert - [0] 
 * Ed - [0] 
 * Ed - [0] 
 * Ed - [0] 
 * Ed - [0] 
 * ebruckert - [0] 
 * ebruckert - [0] 
 * ebruckert - [0] 
 * ebruckert - [0] 
 * ebruckert - [0] 
 * ebruckert - [0] 
 * ebruckert - [0] 
 * ebruckert - [0] 
 * ebruckert - [0] 
 * ebruckert - [0] 
 * ebruckert - [0] 
 * ebruckert - [0] 
 * ebruckert - [0] 
 * ebruckert - [0] 
 * ebruckert - [0] 
 * ebruckert - [0] 
 * ebruckert - [0] 
 * ebruckert - [0] 
 * ebruckert - [0] 
 * ebruckert - [0] 
 * ebruckert - [0] 
 * ebruckert - [0] 
 * Edward Bruckert - [0] 
 * Edward Bruckert - [0] 
 * Edward Bruckert - [0] 
 * Edward Bruckert - [0] 
 * ebruckert - [0] 
 * kevinb - Initial Creation
 * bruckert - [0] fixed p back locus and nf2 with Cris
 * bruckert - [0] modified f per chris
 * bruckert - [0] ipi problem with p 
 * bruckert - [0] 
 * bruckert - [0] spanish tuning
 * bruckert - [0] 
 * bruckert - [0] lili
 * bruckert - [0] f3 t locus bring f3 too close to f2 on front vowels 
 * bruckert - [0] fson1 not marked added
 * bruckert - [0] kh and g f1 ->180
 * bruckert - [0] 
 * bruckert - [0] 
 * Ebruckert - [0] atopaqa weren't marked
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] t burst to 7
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] R INHDUR TO 65
 * Ebruckert - [0] LL WAS MARKED AS AN OBSTRUENT PLOSIVE?????
 * bruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * Ebruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * bruckert - [0] 
 * barthols - [0] learning 
 * MaryH - [0] copied from it_mal.phd and renamed to it_fem.phd
 * MaryH - [0] Adding Formant info to EH
 * MaryH - [0] Added formant info for the it_fem vowel
 * MaryH - [0] Added vowel formants
 * MaryH - [0] changed NG to NX which map to the Spanish and English
 * MaryH - [0] Updated the it_phon.phd
 * MaryH - [0] Finished updating the italian fem markings.  Had to use /N/ for /ND/, /NH/ for /NJ/ and /TS/ for /DZ/
 * MaryH - [0] 
 * schnee - [0] changed extra -1's to 0's
 * schnee - [0] fixed op dip table
 * ebruckert - [0] 
 * barthols - [0] changed bandwidth in ao and ax
 * barthols - [0] bandwidths changed for ao and ax
 * barthols - [0] changed formants to match marilla's.  Raised first bandwidth from 50 to 100.
 * barthols - [0] ax
 * barthols - [0] AP
 * barthols - [0] ax
 * barthols - [0] ax
 * barthols - [0] ao
 * barthols - [0] ao
 * barthols - [0] EH
 * barthols - [0] AP
 * barthols - [0] ep
 * barthols - [0] iy, op, uw
 * barthols - [0] iy squeak
 * barthols - [0] l 
 * barthols - [0] b 
 * barthols - [0] n
 * barthols - [0] n
 * barthols - [0] back to original n
 * barthols - [0] v
 * barthols - [0] b - matched locus numbers to that of spanish
 * barthols - [0] 
 * barthols - [0] b - locus numbers for all formants
 * barthols - [0] b - matched formants and bandwidths to spanish.
 * barthols - [0] p - matched to spanish
 * barthols - [0] did other locus locations for p, b.
 * barthols - [0] 
 * barthols - [0] Changed f and v locus info to match Dennis Klatt's info.
 * barthols - [0] f,v
 * barthols - [0] continuing matching Dennis Klatt locus data
 * barthols - [0] klatt locus data
 * barthols - [0] finished adding Klatt locus data
 * barthols - [0] matched n formant and bandwidth info to US
 * barthols - [0] tried measuring marilla's
 * barthols - [0] US fem formant and bandwidth data back in
 * barthols - [0] l values from ed
 * barthols - [0] l to Marilla's
 * barthols - [0] 
 * Ed - [0] 
 * Ed - [0] 
 * Ed - [0] 
 * Ed - [0] 
 * Ed - [0] 
 * Ed - [0] 
 * Ed - [0] 
 * Ed - [0] 
 * Ed - [0] 
 * Ed - [0] 
 * Ed - [0] 
 * barthols - [0] ax measured to Marilla's to try and get rid of squeak.
 * barthols - [0] put in US values for ax
 * barthols - [0] ax measured from wave
 * barthols - [0] ax
 * barthols - [0] ax
 * barthols - [0] ax
 * barthols - [0] ax
 * barthols - [0] changed av to 52
 * barthols - [0] shorten durations for n
 * barthols - [0] 
 * barthols - [0] g- put in US formants
 * barthols - [0] 
 * barthols - [0] v- made locus data match US
 * barthols - [0] 
 * barthols - [0] matched d to 88_fem.phd
 * barthols - [0] jh mapped to 88
 * barthols - [0] s mapped to 88
 * barthols - [0] matched to 88
 * barthols - [0] 
 * barthols - [0] matched n to 88_fem
 * barthols - [0] n - halved AV to 30
 * barthols - [0] n- AV 45
 * barthols - [0] l - 88
 * ebruckert - [0] 
 * barthols - [0] matched iy for us fem
 * barthols - [0] increased mal values by 15% for op
 * barthols - [0] 
 * barthols - [0] uw- increased male values by 15%
 * barthols - [0] Changed F0 seg target to 0.
 * barthols - [0] increased F3 for Y
 * barthols - [0] matched F0 seg target and place of artic to 88_fem
 * barthols - [0] 
 * barthols - [0] matched bandwidths to 88_fem
 * barthols - [0] 
 * ebruckert - [0] 
 * ebruckert - [0] 
 * {{END_COMMENT_BLOCK}}
 * {{COMMENT_BLOCK 41C9 C0C8 2985 53FA 3098}}
 *
 * {{0000 2B2B 3AD0 52BC 035B 4D58 15D1 1411}}
 */
#ifdef PHEDIT2
short inhdr[100] = {
#else
const short it_inhdr[] = {
#endif
 300, 
 132, 
 130, 
 110, 
 128, 
 110, 
 98, 
 150, 
 140, 
 75, 
 60, 
 75, 
 95, 
 90, 
 100, 
 125, 
 118, 
 100, 
 90, 
 80, 
 60, 
 100, 
 75, 
 90, 
 85, 
 80, 
 120, 
 60, 
 150, 
 126, 
 90, 
 120, 
 75, 
 65, 
 100, 
 120, 
 95, 
 90, 
 75, 
 90, 
 125, 
 180, 
 180 };

#ifdef PHEDIT2
short mindur[100] = {
#else
const short it_mindur[] = {
#endif
 300, 
 80, 
 80, 
 80, 
 80, 
 80, 
 50, 
 60, 
 70, 
 50, 
 30, 
 50, 
 50, 
 45, 
 60, 
 65, 
 55, 
 60, 
 60, 
 70, 
 50, 
 75, 
 45, 
 60, 
 50, 
 70, 
 90, 
 50, 
 140, 
 55, 
 40, 
 90, 
 60, 
 30, 
 60, 
 60, 
 50, 
 60, 
 45, 
 45, 
 60, 
 120, 
 120 };

#ifdef PHEDIT2
short burdr[100] = {
#else
const short it_burdr[] = {
#endif
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 15, 
 0, 
 45, 
 16, 
 7, 
 7, 
 15, 
 26, 
 26, 
 75, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 80, 
 80 };

#ifdef PHEDIT2
short f0msegtars[100] = {
#else
const short it_f0msegtars[] = {
#endif
 30, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 -50, 
 -50, 
 -60, 
 -30, 
 -50, 
 -50, 
 300, 
 300, 
 300, 
 300, 
 -50, 
 -50, 
 -50, 
 -50, 
 300, 
 -50, 
 300, 
 -50, 
 300, 
 -50, 
 300, 
 0, 
 -50, 
 0, 
 -50, 
 -50, 
 -50, 
 -50, 
 0, 
 -50, 
 0, 
 1, 
 300, 
 250, 
 250 };

#ifdef PHEDIT2
short f0fsegtars[100] = {
#else
const short it_f0fsegtars[] = {
#endif
 30, 
 0, 
 0, 
 0, 
 30, 
 60, 
 30, 
 60, 
 -50, 
 -50, 
 -60, 
 -30, 
 -50, 
 -50, 
 300, 
 300, 
 20, 
 300, 
 -50, 
 -50, 
 -50, 
 -50, 
 300, 
 -50, 
 300, 
 -50, 
 300, 
 -50, 
 300, 
 0, 
 -50, 
 300, 
 -50, 
 -50, 
 -50, 
 -50, 
 -50, 
 -50, 
 300, 
 -50, 
 300, 
 250, 
 250 };

#ifdef PHEDIT2
short begtyp[100] = {
#else
const short it_begtyp[] = {
#endif
 4, 
 2, 
 1, 
 1, 
 3, 
 3, 
 2, 
 1, 
 3, 
 4, 
 3, 
 4, 
 4, 
 4, 
 4, 
 4, 
 1, 
 4, 
 4, 
 4, 
 4, 
 4, 
 4, 
 4, 
 4, 
 4, 
 4, 
 4, 
 4, 
 3, 
 4, 
 4, 
 4, 
 4, 
 4, 
 4, 
 4, 
 4, 
 4, 
 4, 
 4, 
 4, 
 4 };

#ifdef PHEDIT2
short endtyp[100] = {
#else
const short it_endtyp[] = {
#endif
 4, 
 2, 
 1, 
 1, 
 3, 
 3, 
 2, 
 1, 
 3, 
 4, 
 3, 
 4, 
 4, 
 4, 
 4, 
 4, 
 1, 
 4, 
 4, 
 4, 
 4, 
 4, 
 4, 
 4, 
 4, 
 4, 
 4, 
 4, 
 4, 
 3, 
 4, 
 4, 
 4, 
 4, 
 4, 
 4, 
 4, 
 4, 
 4, 
 4, 
 4, 
 4, 
 4 };

#ifdef PHEDIT2
short place[500] = {
#else
const short it_place[] = {
#endif
 0, 
 0, 
 0, 
 192, 
 0, 
 0, 
 0, 
 192, 
 8, 
 0, 
 0, 
 1, 
 8, 
 4, 
 1, 
 8, 
 0, 
 2, 
 1, 
 2, 
 16, 
 4, 
 1, 
 1, 
 2, 
 2, 
 16, 
 16, 
 4, 
 0, 
 8, 
 16, 
 8, 
 1, 
 16, 
 1, 
 2, 
 1, 
 1, 
 4, 
 4, 
 8, 
 8 };

#ifdef PHEDIT2
short featb[200] = {
#else
const short it_featb[] = {
#endif
 16, 
 31, 
 31, 
 1055, 
 31, 
 1055, 
 1055, 
 1818, 
 282, 
 290, 
 282, 
 9626, 
 9626, 
 1434, 
 288, 
 288, 
 31, 
 8544, 
 10594, 
 8546, 
 8498, 
 10530, 
 10592, 
 10594, 
 10592, 
 10594, 
 10592, 
 10594, 
 10528, 
 31, 
 314, 
 10592, 
 290, 
 298, 
 402, 
 274, 
 1426, 
 402, 
 10592, 
 1434, 
 288, 
 10528, 
 10594, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
0 };

#ifdef PHEDIT2
short maltar[700] = {
#else
const short it_maltar[] = {
#endif
 -1, 
 765, 
 395, 
 300, 
 445, 
 325, 
 550, 
 310, 
 480, 
 280, 
 350, 
 300, 
 180, 
 280, 
 340, 
 320, 
 540, 
 386, 
 220, 
 300, 
 180, 
 280, 
 350, 
 220, 
 350, 
 300, 
 280, 
 210, 
 475, 
 560, 
 374, 
 220, 
 310, 
 295, 
 430, 
 325, 
 180, 
 400, 
 350, 
 280, 
 300, 
 500, 
 500, 
 -1, 
 1240, 
 2000, 
 2140, 
 775, 
 715, 
 1260, 
 2256, 
 1350, 
 1550, 
 2200, 
 1197, 
 1461, 
 2000, 
 1100, 
 1520, 
 1870, 
 1523, 
 900, 
 1595, 
 1335, 
 1730, 
 1000, 
 900, 
 1700, 
 1650, 
 1790, 
 1700, 
 1800, 
 885, 
 1315, 
 1800, 
 1420, 
 710, 
 1600, 
 1100, 
 1461, 
 1400, 
 1000, 
 2000, 
 1600, 
 1880, 
 1880, 
 -1, 
 2400, 
 2482, 
 3033, 
 2317, 
 2522, 
 2600, 
 3000, 
 2500, 
 2531, 
 2500, 
 2327, 
 2498, 
 2990, 
 2080, 
 2700, 
 2466, 
 2488, 
 1800, 
 2546, 
 2390, 
 2700, 
 2100, 
 1800, 
 2600, 
 2600, 
 2400, 
 2520, 
 2700, 
 2582, 
 1850, 
 2400, 
 2600, 
 2250, 
 2100, 
 2144, 
 2498, 
 2500, 
 2100, 
 2990, 
 2350, 
 2710, 
 2710, 
 250, 
 100, 
 110, 
 90, 
 100, 
 120, 
 100, 
 100, 
 200, 
 120, 
 60, 
 130, 
 140, 
 105, 
 300, 
 300, 
 240, 
 300, 
 110, 
 90, 
 90, 
 70, 
 160, 
 110, 
 200, 
 90, 
 200, 
 90, 
 250, 
 90, 
 200, 
 200, 
 140, 
 50, 
 90, 
 140, 
 140, 
 90, 
 160, 
 105, 
 200, 
 300, 
 300, 
 250, 
 150, 
 160, 
 150, 
 150, 
 180, 
 150, 
 150, 
 200, 
 150, 
 170, 
 150, 
 350, 
 425, 
 150, 
 150, 
 150, 
 150, 
 110, 
 80, 
 120, 
 170, 
 150, 
 110, 
 150, 
 80, 
 160, 
 120, 
 250, 
 100, 
 60, 
 160, 
 100, 
 80, 
 250, 
 120, 
 350, 
 250, 
 150, 
 425, 
 240, 
 150, 
 150, 
 250, 
 200, 
 200, 
 200, 
 200, 
 250, 
 250, 
 250, 
 200, 
 110, 
 250, 
 250, 
 350, 
 450, 
 150, 
 150, 
 150, 
 250, 
 130, 
 240, 
 180, 
 250, 
 180, 
 130, 
 250, 
 240, 
 280, 
 180, 
 250, 
 200, 
 130, 
 280, 
 300, 
 80, 
 150, 
 120, 
 350, 
 150, 
 180, 
 450, 
 300, 
 250, 
 250, 
 0, 
 52, 
 54, 
 53, 
 53, 
 54, 
 54, 
 53, 
 50, 
 53, 
 45, 
 54, 
 55, 
 54, 
 0, 
 0, 
 55, 
 0, 
 35, 
 30, 
 35, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 54, 
 48, 
 0, 
 45, 
 52, 
 50, 
 40, 
 52, 
 54, 
 0, 
 0, 
 0, 
 0, 
 0 };

#ifdef PHEDIT2
short femtar[700] = {
#else
const short it_femtar[] = {
#endif
 -1, 
 976, 
 515, 
 350, 
 512, 
 374, 
 666, 
 357, 
 480, 
 488, 
 390, 
 300, 
 450, 
 280, 
 320, 
 340, 
 730, 
 350, 
 310, 
 310, 
 180, 
 220, 
 310, 
 310, 
 370, 
 220, 
 180, 
 220, 
 475, 
 650, 
 350, 
 180, 
 310, 
 310, 
 400, 
 280, 
 180, 
 400, 
 310, 
 365, 
 320, 
 290, 
 290, 
 -1, 
 1546, 
 2360, 
 2790, 
 891, 
 822, 
 1580, 
 2369, 
 1743, 
 1100, 
 1200, 
 1444, 
 1800, 
 2000, 
 800, 
 1730, 
 2075, 
 2182, 
 1735, 
 1495, 
 890, 
 2100, 
 1500, 
 1150, 
 1860, 
 1860, 
 2336, 
 2190, 
 2100, 
 920, 
 1450, 
 2336, 
 1520, 
 710, 
 1200, 
 1250, 
 1600, 
 1400, 
 1800, 
 1900, 
 1980, 
 2000, 
 2000, 
 -1, 
 2888, 
 3051, 
 3310, 
 2665, 
 2900, 
 2832, 
 3450, 
 2550, 
 3200, 
 2815, 
 2457, 
 2800, 
 2990, 
 2715, 
 2800, 
 2970, 
 2888, 
 2150, 
 2789, 
 2817, 
 3150, 
 2716, 
 2150, 
 3020, 
 3020, 
 2400, 
 2710, 
 2700, 
 2700, 
 2550, 
 2400, 
 2800, 
 2250, 
 2800, 
 2700, 
 2800, 
 2500, 
 2716, 
 2630, 
 2930, 
 3100, 
 3100, 
 250, 
 100, 
 100, 
 90, 
 100, 
 100, 
 100, 
 170, 
 200, 
 90, 
 60, 
 120, 
 120, 
 105, 
 300, 
 200, 
 80, 
 300, 
 100, 
 60, 
 90, 
 120, 
 300, 
 100, 
 200, 
 110, 
 200, 
 90, 
 250, 
 100, 
 200, 
 200, 
 140, 
 50, 
 90, 
 140, 
 105, 
 90, 
 300, 
 105, 
 200, 
 300, 
 300, 
 250, 
 140, 
 140, 
 140, 
 140, 
 140, 
 140, 
 180, 
 160, 
 110, 
 200, 
 150, 
 160, 
 425, 
 150, 
 200, 
 160, 
 150, 
 80, 
 130, 
 120, 
 170, 
 180, 
 150, 
 150, 
 140, 
 160, 
 120, 
 250, 
 140, 
 60, 
 160, 
 100, 
 80, 
 250, 
 120, 
 425, 
 250, 
 150, 
 425, 
 240, 
 150, 
 150, 
 250, 
 220, 
 220, 
 220, 
 220, 
 220, 
 220, 
 200, 
 130, 
 120, 
 400, 
 150, 
 250, 
 450, 
 150, 
 200, 
 270, 
 150, 
 130, 
 240, 
 180, 
 350, 
 180, 
 130, 
 250, 
 170, 
 280, 
 180, 
 250, 
 220, 
 130, 
 280, 
 300, 
 80, 
 350, 
 120, 
 450, 
 150, 
 150, 
 450, 
 300, 
 250, 
 250, 
 0, 
 50, 
 54, 
 52, 
 52, 
 50, 
 52, 
 54, 
 48, 
 53, 
 45, 
 43, 
 46, 
 54, 
 0, 
 0, 
 53, 
 0, 
 0, 
 30, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 53, 
 48, 
 0, 
 45, 
 52, 
 50, 
 53, 
 45, 
 52, 
 0, 
 54, 
 0, 
 0, 
 0 };

#ifdef PHEDIT2
short maldip[3500] = {
#else
const short it_maldip[] = {
#endif
 0, 
 0 };

#ifdef PHEDIT2
short femdip[3500] = {
#else
const short it_femdip[] = {
#endif
 0, 
 0 };

#ifdef PHEDIT2
short ptram[100] = {
#else
const short it_ptram[] = {
#endif
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 1, 
 0, 
 31, 
 0, 
 0, 
 0, 
 61, 
 91, 
 0, 
 121, 
 151, 
 181, 
 211, 
 241, 
 271, 
 301, 
 331, 
 361, 
 391, 
 421, 
 451, 
 0, 
 0, 
 481, 
 511, 
 0, 
 0, 
 541, 
 0, 
 0, 
 571, 
 0, 
 601, 
 631, 
 661 };

#ifdef PHEDIT2
short malamp[7000] = {
#else
const short it_malamp[] = {
#endif
 0, 
 20, 
 20, 
 0, 
 0, 
 0, 
 0, 
 20, 
 20, 
 0, 
 0, 
 0, 
 0, 
 20, 
 20, 
 0, 
 0, 
 0, 
 0, 
 20, 
 20, 
 0, 
 0, 
 0, 
 0, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 0, 
 30, 
 30, 
 0, 
 30, 
 0, 
 0, 
 30, 
 30, 
 0, 
 30, 
 0, 
 0, 
 30, 
 30, 
 0, 
 30, 
 0, 
 0, 
 30, 
 30, 
 0, 
 30, 
 0, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 0, 
 0, 
 0, 
 0, 
 50, 
 50, 
 0, 
 0, 
 0, 
 0, 
 0, 
 50, 
 0, 
 0, 
 0, 
 0, 
 0, 
 50, 
 0, 
 0, 
 0, 
 0, 
 0, 
 43, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 0, 
 0, 
 0, 
 0, 
 55, 
 0, 
 0, 
 0, 
 0, 
 0, 
 52, 
 0, 
 0, 
 0, 
 0, 
 0, 
 53, 
 0, 
 0, 
 0, 
 0, 
 0, 
 53, 
 0, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 0, 
 0, 
 0, 
 0, 
 44, 
 47, 
 0, 
 0, 
 0, 
 0, 
 44, 
 47, 
 0, 
 0, 
 0, 
 0, 
 44, 
 45, 
 0, 
 0, 
 0, 
 0, 
 44, 
 45, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 0, 
 10, 
 0, 
 0, 
 0, 
 0, 
 0, 
 10, 
 0, 
 0, 
 0, 
 0, 
 0, 
 14, 
 0, 
 0, 
 0, 
 0, 
 0, 
 10, 
 0, 
 0, 
 0, 
 0, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 10, 
 12, 
 13, 
 0, 
 0, 
 0, 
 10, 
 14, 
 12, 
 0, 
 0, 
 0, 
 10, 
 14, 
 12, 
 0, 
 0, 
 0, 
 10, 
 14, 
 12, 
 0, 
 0, 
 0, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 0, 
 30, 
 30, 
 0, 
 0, 
 0, 
 0, 
 30, 
 30, 
 0, 
 0, 
 0, 
 0, 
 30, 
 30, 
 0, 
 0, 
 0, 
 0, 
 30, 
 30, 
 0, 
 0, 
 0, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 0, 
 45, 
 61, 
 0, 
 44, 
 0, 
 0, 
 45, 
 61, 
 0, 
 44, 
 0, 
 0, 
 45, 
 56, 
 0, 
 38, 
 0, 
 0, 
 45, 
 56, 
 0, 
 38, 
 0, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 25, 
 25, 
 0, 
 0, 
 0, 
 50, 
 25, 
 25, 
 0, 
 0, 
 0, 
 50, 
 25, 
 25, 
 0, 
 0, 
 0, 
 50, 
 25, 
 25, 
 0, 
 0, 
 0, 
 50, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 0, 
 0, 
 0, 
 0, 
 0, 
 50, 
 0, 
 0, 
 0, 
 0, 
 0, 
 50, 
 0, 
 0, 
 10, 
 10, 
 0, 
 50, 
 0, 
 0, 
 0, 
 0, 
 0, 
 50, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 22, 
 38, 
 44, 
 50, 
 0, 
 0, 
 32, 
 40, 
 44, 
 50, 
 0, 
 0, 
 22, 
 36, 
 44, 
 50, 
 0, 
 0, 
 22, 
 36, 
 44, 
 50, 
 0, 
 0, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 32, 
 40, 
 30, 
 50, 
 0, 
 0, 
 32, 
 40, 
 30, 
 50, 
 0, 
 0, 
 32, 
 40, 
 30, 
 50, 
 0, 
 0, 
 32, 
 40, 
 30, 
 50, 
 0, 
 0, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 0, 
 50, 
 0, 
 36, 
 0, 
 0, 
 50, 
 0, 
 0, 
 36, 
 0, 
 0, 
 50, 
 0, 
 0, 
 35, 
 0, 
 0, 
 50, 
 0, 
 0, 
 30, 
 0, 
 0, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 0, 
 38, 
 0, 
 30, 
 0, 
 0, 
 39, 
 0, 
 0, 
 42, 
 0, 
 0, 
 38, 
 0, 
 23, 
 33, 
 0, 
 0, 
 38, 
 0, 
 23, 
 33, 
 0, 
 0, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 0, 
 39, 
 0, 
 0, 
 52, 
 0, 
 0, 
 29, 
 0, 
 0, 
 52, 
 0, 
 0, 
 39, 
 0, 
 0, 
 46, 
 0, 
 0, 
 39, 
 0, 
 0, 
 46, 
 0, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 56, 
 0, 
 0, 
 0, 
 0, 
 0, 
 56, 
 0, 
 0, 
 0, 
 0, 
 0, 
 56, 
 0, 
 0, 
 0, 
 0, 
 0, 
 56, 
 0, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 0, 
 0, 
 0, 
 0, 
 0, 
 48, 
 0, 
 0, 
 0, 
 0, 
 0, 
 48, 
 0, 
 0, 
 0, 
 0, 
 0, 
 48, 
 0, 
 0, 
 0, 
 0, 
 0, 
 43, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 0, 
 0, 
 0, 
 0, 
 0, 
 47, 
 0, 
 0, 
 0, 
 0, 
 0, 
 47, 
 0, 
 0, 
 0, 
 0, 
 0, 
 44, 
 0, 
 0, 
 0, 
 0, 
 0, 
 44, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 -1, 
 -1, 
 30, 
 30, 
 50, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0 };

#ifdef PHEDIT2
short femamp[7000] = {
#else
const short it_femamp[] = {
#endif
 0, 
 20, 
 20, 
 0, 
 0, 
 0, 
 0, 
 20, 
 20, 
 0, 
 0, 
 0, 
 0, 
 20, 
 20, 
 0, 
 0, 
 0, 
 0, 
 20, 
 20, 
 0, 
 0, 
 0, 
 0, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 0, 
 30, 
 30, 
 0, 
 30, 
 0, 
 0, 
 30, 
 30, 
 0, 
 30, 
 0, 
 0, 
 30, 
 30, 
 0, 
 30, 
 0, 
 0, 
 30, 
 30, 
 0, 
 30, 
 0, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 0, 
 0, 
 0, 
 0, 
 0, 
 50, 
 0, 
 0, 
 0, 
 0, 
 0, 
 50, 
 0, 
 0, 
 0, 
 0, 
 0, 
 50, 
 0, 
 0, 
 0, 
 0, 
 0, 
 43, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 0, 
 0, 
 0, 
 0, 
 52, 
 0, 
 0, 
 0, 
 0, 
 0, 
 52, 
 0, 
 0, 
 0, 
 0, 
 0, 
 57, 
 0, 
 0, 
 0, 
 0, 
 0, 
 57, 
 0, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 22, 
 38, 
 44, 
 0, 
 43, 
 0, 
 0, 
 0, 
 0, 
 0, 
 44, 
 47, 
 0, 
 0, 
 0, 
 0, 
 44, 
 45, 
 0, 
 0, 
 0, 
 0, 
 44, 
 45, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 10, 
 0, 
 0, 
 0, 
 0, 
 0, 
 14, 
 0, 
 0, 
 0, 
 0, 
 0, 
 10, 
 0, 
 0, 
 0, 
 0, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 32, 
 40, 
 30, 
 0, 
 0, 
 0, 
 10, 
 14, 
 12, 
 0, 
 0, 
 0, 
 10, 
 14, 
 12, 
 0, 
 0, 
 0, 
 10, 
 14, 
 12, 
 0, 
 0, 
 0, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 30, 
 30, 
 0, 
 0, 
 0, 
 0, 
 30, 
 30, 
 0, 
 0, 
 0, 
 0, 
 30, 
 30, 
 0, 
 0, 
 0, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 0, 
 39, 
 0, 
 0, 
 52, 
 0, 
 0, 
 45, 
 61, 
 0, 
 44, 
 0, 
 0, 
 45, 
 56, 
 0, 
 38, 
 0, 
 0, 
 45, 
 56, 
 0, 
 38, 
 0, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 25, 
 25, 
 0, 
 0, 
 0, 
 0, 
 25, 
 25, 
 0, 
 0, 
 0, 
 50, 
 25, 
 25, 
 0, 
 0, 
 0, 
 50, 
 25, 
 25, 
 0, 
 0, 
 0, 
 50, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 50, 
 0, 
 0, 
 10, 
 10, 
 0, 
 50, 
 0, 
 0, 
 0, 
 0, 
 0, 
 50, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 22, 
 38, 
 44, 
 0, 
 43, 
 0, 
 32, 
 40, 
 44, 
 50, 
 43, 
 0, 
 22, 
 36, 
 44, 
 50, 
 43, 
 0, 
 22, 
 36, 
 44, 
 50, 
 43, 
 0, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 32, 
 40, 
 30, 
 0, 
 0, 
 0, 
 32, 
 40, 
 30, 
 50, 
 0, 
 0, 
 32, 
 40, 
 30, 
 50, 
 0, 
 0, 
 32, 
 40, 
 30, 
 50, 
 0, 
 0, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 40, 
 0, 
 0, 
 40, 
 0, 
 0, 
 40, 
 0, 
 0, 
 40, 
 0, 
 0, 
 40, 
 0, 
 0, 
 40, 
 0, 
 0, 
 40, 
 0, 
 0, 
 40, 
 0, 
 0, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 39, 
 0, 
 0, 
 42, 
 0, 
 0, 
 38, 
 0, 
 23, 
 33, 
 0, 
 0, 
 38, 
 0, 
 23, 
 33, 
 0, 
 0, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 0, 
 39, 
 0, 
 0, 
 52, 
 0, 
 0, 
 29, 
 0, 
 0, 
 52, 
 0, 
 0, 
 39, 
 0, 
 0, 
 46, 
 0, 
 0, 
 39, 
 0, 
 0, 
 46, 
 0, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 40, 
 0, 
 0, 
 40, 
 0, 
 0, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 0, 
 0, 
 0, 
 0, 
 56, 
 0, 
 0, 
 0, 
 0, 
 0, 
 56, 
 0, 
 0, 
 0, 
 0, 
 0, 
 56, 
 0, 
 0, 
 0, 
 0, 
 0, 
 56, 
 0, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 0, 
 0, 
 0, 
 0, 
 0, 
 45, 
 0, 
 0, 
 0, 
 0, 
 0, 
 45, 
 0, 
 0, 
 0, 
 0, 
 0, 
 43, 
 0, 
 0, 
 0, 
 0, 
 0, 
 43, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 25, 
 25, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 47, 
 0, 
 0, 
 0, 
 0, 
 0, 
 44, 
 0, 
 0, 
 0, 
 0, 
 0, 
 44, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 0, 
 46, 
 53, 
 0, 
 37, 
 0, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 0, 
 20, 
 35, 
 53, 
 58, 
 0, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 0, 
 20, 
 35, 
 53, 
 58, 
 0, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 0 };

#ifdef PHEDIT2
short plocu[500] = {
#else
const short it_plocu[] = {
#endif
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 1, 
 10, 
 19, 
 28, 
 37, 
 46, 
 55, 
 0, 
 64, 
 73, 
 82, 
 91, 
 100, 
 109, 
 118, 
 127, 
 136, 
 145, 
 154, 
 163, 
 0, 
 172, 
 181, 
 190, 
 0, 
 199, 
 208, 
 217, 
 0, 
 226, 
 235, 
 244, 
 253, 
 262, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 271, 
 280, 
 289, 
 298, 
 307, 
 316, 
 325, 
 0, 
 334, 
 343, 
 352, 
 361, 
 370, 
 379, 
 388, 
 397, 
 406, 
 415, 
 424, 
 433, 
 0, 
 442, 
 451, 
 460, 
 0, 
 469, 
 478, 
 487, 
 0, 
 496, 
 505, 
 514, 
 523, 
 532, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 541, 
 550, 
 559, 
 568, 
 577, 
 586, 
 595, 
 604, 
 613, 
 622, 
 631, 
 640, 
 649, 
 658, 
 667, 
 676, 
 685, 
 694, 
 703, 
 712, 
 0, 
 721, 
 730, 
 739, 
 0, 
 748, 
 757, 
 766, 
 0, 
 775, 
 784, 
 793, 
 802, 
 811, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 820, 
 829, 
 838, 
 847, 
 856, 
 0, 
 865, 
 874, 
 883, 
 892, 
 901, 
 910, 
 919, 
 928, 
 937, 
 946, 
 955, 
 964, 
 973, 
 0, 
 982, 
 991, 
 0, 
 1000, 
 0, 
 1009, 
 0, 
 1018, 
 1027, 
 1036, 
 1045, 
 1054 };

#ifdef PHEDIT2
short maleloc[3500] = {
#else
const short it_maleloc[] = {
#endif
 0, 
 325, 
 80, 
 20, 
 2000, 
 50, 
 30, 
 3000, 
 50, 
 50, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 238, 
 10, 
 30, 
 1200, 
 10, 
 16, 
 2050, 
 10, 
 20, 
 280, 
 20, 
 35, 
 1420, 
 80, 
 55, 
 2600, 
 40, 
 45, 
 195, 
 10, 
 30, 
 2039, 
 10, 
 100, 
 2735, 
 30, 
 30, 
 374, 
 10, 
 30, 
 1, 
 92, 
 35, 
 2080, 
 35, 
 30, 
 310, 
 40, 
 40, 
 1400, 
 40, 
 50, 
 2550, 
 0, 
 70, 
 350, 
 43, 
 40, 
 1700, 
 50, 
 95, 
 2700, 
 50, 
 95, 
 200, 
 25, 
 25, 
 900, 
 40, 
 30, 
 2100, 
 25, 
 45, 
 336, 
 80, 
 50, 
 1800, 
 66, 
 35, 
 2600, 
 30, 
 45, 
 250, 
 33, 
 45, 
 2500, 
 20, 
 52, 
 2800, 
 20, 
 20, 
 240, 
 32, 
 55, 
 1750, 
 25, 
 70, 
 2750, 
 19, 
 70, 
 350, 
 55, 
 20, 
 950, 
 35, 
 30, 
 2200, 
 25, 
 45, 
 200, 
 25, 
 25, 
 900, 
 40, 
 30, 
 2100, 
 25, 
 45, 
 320, 
 43, 
 35, 
 1700, 
 66, 
 35, 
 2650, 
 30, 
 45, 
 250, 
 43, 
 35, 
 1800, 
 66, 
 35, 
 2600, 
 30, 
 45, 
 280, 
 33, 
 45, 
 1990, 
 20, 
 50, 
 2400, 
 50, 
 50, 
 250, 
 33, 
 45, 
 1990, 
 20, 
 50, 
 3000, 
 113, 
 50, 
 318, 
 10, 
 50, 
 1825, 
 25, 
 60, 
 2775, 
 19, 
 70, 
 300, 
 50, 
 50, 
 1300, 
 50, 
 50, 
 1800, 
 50, 
 50, 
 320, 
 33, 
 45, 
 2200, 
 20, 
 50, 
 2400, 
 50, 
 50, 
 320, 
 54, 
 55, 
 1750, 
 25, 
 70, 
 2776, 
 19, 
 70, 
 440, 
 25, 
 40, 
 2200, 
 15, 
 60, 
 2600, 
 80, 
 60, 
 300, 
 50, 
 30, 
 1, 
 92, 
 35, 
 2080, 
 35, 
 40, 
 280, 
 20, 
 35, 
 1420, 
 80, 
 55, 
 2600, 
 40, 
 45, 
 350, 
 55, 
 20, 
 950, 
 35, 
 30, 
 2200, 
 25, 
 45, 
 195, 
 10, 
 30, 
 2039, 
 10, 
 100, 
 2735, 
 30, 
 30, 
 285, 
 32, 
 55, 
 1630, 
 30, 
 70, 
 2340, 
 51, 
 70, 
 245, 
 80, 
 30, 
 1900, 
 47, 
 40, 
 2727, 
 40, 
 40, 
 245, 
 80, 
 30, 
 1900, 
 47, 
 40, 
 2727, 
 40, 
 40, 
 280, 
 80, 
 20, 
 1500, 
 50, 
 30, 
 2500, 
 50, 
 30, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 280, 
 20, 
 30, 
 1000, 
 10, 
 20, 
 1800, 
 80, 
 20, 
 280, 
 20, 
 30, 
 1420, 
 80, 
 50, 
 2632, 
 30, 
 60, 
 244, 
 10, 
 30, 
 2039, 
 10, 
 100, 
 2665, 
 30, 
 40, 
 320, 
 60, 
 30, 
 1, 
 91, 
 35, 
 2044, 
 65, 
 40, 
 310, 
 40, 
 40, 
 1271, 
 40, 
 50, 
 2610, 
 0, 
 60, 
 450, 
 30, 
 45, 
 1600, 
 40, 
 85, 
 2491, 
 10, 
 50, 
 350, 
 45, 
 25, 
 920, 
 46, 
 30, 
 1800, 
 40, 
 45, 
 483, 
 10, 
 40, 
 1700, 
 40, 
 75, 
 2600, 
 0, 
 50, 
 300, 
 33, 
 50, 
 1500, 
 16, 
 60, 
 2100, 
 10, 
 65, 
 245, 
 32, 
 55, 
 1680, 
 5, 
 120, 
 2450, 
 10, 
 70, 
 350, 
 45, 
 25, 
 920, 
 46, 
 30, 
 2250, 
 45, 
 30, 
 350, 
 45, 
 25, 
 920, 
 46, 
 30, 
 1800, 
 40, 
 45, 
 320, 
 43, 
 50, 
 1700, 
 10, 
 75, 
 2600, 
 10, 
 50, 
 250, 
 43, 
 50, 
 1700, 
 40, 
 75, 
 2600, 
 0, 
 50, 
 280, 
 33, 
 50, 
 1800, 
 16, 
 50, 
 2000, 
 20, 
 90, 
 300, 
 33, 
 50, 
 1780, 
 16, 
 60, 
 2150, 
 0, 
 90, 
 320, 
 10, 
 50, 
 1600, 
 10, 
 50, 
 2450, 
 10, 
 70, 
 300, 
 50, 
 50, 
 1300, 
 50, 
 50, 
 1800, 
 50, 
 50, 
 320, 
 33, 
 45, 
 1990, 
 20, 
 50, 
 2150, 
 0, 
 90, 
 310, 
 40, 
 40, 
 1690, 
 15, 
 60, 
 2550, 
 10, 
 70, 
 440, 
 25, 
 40, 
 1800, 
 20, 
 70, 
 2150, 
 20, 
 70, 
 300, 
 50, 
 30, 
 1, 
 91, 
 40, 
 2100, 
 65, 
 40, 
 280, 
 20, 
 30, 
 1420, 
 80, 
 50, 
 2632, 
 30, 
 60, 
 350, 
 45, 
 25, 
 920, 
 46, 
 30, 
 2250, 
 45, 
 30, 
 244, 
 10, 
 30, 
 2039, 
 10, 
 100, 
 2665, 
 30, 
 40, 
 285, 
 32, 
 55, 
 1600, 
 27, 
 70, 
 2270, 
 0, 
 85, 
 253, 
 65, 
 30, 
 1800, 
 43, 
 40, 
 2700, 
 18, 
 65, 
 253, 
 65, 
 30, 
 1800, 
 43, 
 40, 
 2700, 
 18, 
 65, 
 280, 
 80, 
 20, 
 1550, 
 50, 
 30, 
 2531, 
 50, 
 30, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 280, 
 20, 
 30, 
 948, 
 10, 
 20, 
 2220, 
 10, 
 25, 
 280, 
 20, 
 30, 
 1400, 
 25, 
 95, 
 1800, 
 40, 
 35, 
 181, 
 10, 
 30, 
 2000, 
 10, 
 1000, 
 2520, 
 30, 
 30, 
 320, 
 60, 
 30, 
 1, 
 91, 
 25, 
 2180, 
 10, 
 40, 
 310, 
 40, 
 40, 
 1250, 
 15, 
 60, 
 2384, 
 0, 
 60, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 450, 
 30, 
 45, 
 1500, 
 66, 
 35, 
 2541, 
 10, 
 50, 
 320, 
 45, 
 25, 
 720, 
 36, 
 35, 
 2270, 
 50, 
 30, 
 426, 
 10, 
 45, 
 1700, 
 40, 
 95, 
 2600, 
 30, 
 85, 
 290, 
 45, 
 40, 
 800, 
 42, 
 65, 
 1923, 
 15, 
 80, 
 245, 
 32, 
 55, 
 1680, 
 10, 
 90, 
 1970, 
 10, 
 100, 
 350, 
 45, 
 30, 
 888, 
 46, 
 30, 
 2198, 
 40, 
 30, 
 320, 
 45, 
 25, 
 720, 
 36, 
 35, 
 1900, 
 40, 
 35, 
 320, 
 43, 
 40, 
 1700, 
 5, 
 95, 
 2300, 
 0, 
 95, 
 250, 
 43, 
 40, 
 1700, 
 40, 
 95, 
 2300, 
 0, 
 95, 
 280, 
 33, 
 45, 
 1400, 
 60, 
 75, 
 2050, 
 15, 
 80, 
 290, 
 45, 
 40, 
 1600, 
 42, 
 65, 
 1920, 
 15, 
 80, 
 320, 
 54, 
 55, 
 1678, 
 10, 
 90, 
 2350, 
 10, 
 80, 
 300, 
 50, 
 50, 
 1300, 
 50, 
 50, 
 1800, 
 50, 
 50, 
 320, 
 33, 
 45, 
 1200, 
 42, 
 65, 
 2150, 
 0, 
 90, 
 310, 
 40, 
 40, 
 1198, 
 40, 
 50, 
 2541, 
 0, 
 70, 
 440, 
 25, 
 40, 
 1700, 
 42, 
 70, 
 1920, 
 25, 
 70, 
 325, 
 50, 
 30, 
 1, 
 91, 
 40, 
 2100, 
 65, 
 40, 
 280, 
 20, 
 30, 
 1400, 
 25, 
 95, 
 1800, 
 40, 
 35, 
 350, 
 45, 
 30, 
 888, 
 46, 
 30, 
 2198, 
 40, 
 30, 
 181, 
 10, 
 30, 
 2000, 
 10, 
 1000, 
 2520, 
 30, 
 30, 
 340, 
 32, 
 55, 
 1630, 
 27, 
 90, 
 2100, 
 20, 
 110, 
 290, 
 45, 
 50, 
 1970, 
 71, 
 30, 
 2570, 
 31, 
 80, 
 290, 
 45, 
 50, 
 1970, 
 71, 
 30, 
 2570, 
 31, 
 80, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 -1, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 -1, 
 -1, 
 -1, 
 253, 
 50, 
 30, 
 1900, 
 80, 
 30, 
 2557, 
 27, 
 40, 
 253, 
 50, 
 30, 
 1900, 
 80, 
 30, 
 2557, 
 27, 
 40, 
 0 };

#ifdef PHEDIT2
short femloc[3500] = {
#else
const short it_femloc[] = {
#endif
 0, 
 325, 
 80, 
 20, 
 1800, 
 50, 
 30, 
 3000, 
 50, 
 50, 
 350, 
 10, 
 30, 
 1100, 
 10, 
 10, 
 2800, 
 10, 
 30, 
 480, 
 30, 
 30, 
 1400, 
 55, 
 35, 
 2000, 
 45, 
 50, 
 450, 
 30, 
 60, 
 1880, 
 39, 
 35, 
 3250, 
 50, 
 45, 
 195, 
 10, 
 30, 
 2039, 
 50, 
 60, 
 2735, 
 50, 
 60, 
 362, 
 60, 
 30, 
 1750, 
 43, 
 40, 
 2700, 
 0, 
 30, 
 330, 
 40, 
 40, 
 2000, 
 30, 
 50, 
 2980, 
 0, 
 70, 
 447, 
 10, 
 45, 
 2375, 
 10, 
 45, 
 3065, 
 10, 
 45, 
 241, 
 30, 
 30, 
 1500, 
 15, 
 25, 
 2412, 
 15, 
 25, 
 492, 
 10, 
 50, 
 2515, 
 10, 
 52, 
 3084, 
 10, 
 52, 
 220, 
 10, 
 50, 
 2700, 
 10, 
 52, 
 2835, 
 10, 
 52, 
 370, 
 32, 
 55, 
 2000, 
 25, 
 70, 
 3300, 
 19, 
 70, 
 260, 
 50, 
 30, 
 1570, 
 47, 
 25, 
 1660, 
 73, 
 35, 
 290, 
 30, 
 30, 
 1800, 
 17, 
 25, 
 2650, 
 30, 
 35, 
 180, 
 56, 
 50, 
 2400, 
 25, 
 35, 
 3000, 
 10, 
 45, 
 270, 
 33, 
 35, 
 2150, 
 66, 
 35, 
 2800, 
 30, 
 45, 
 210, 
 46, 
 40, 
 2450, 
 13, 
 70, 
 3000, 
 110, 
 50, 
 270, 
 30, 
 45, 
 2550, 
 13, 
 70, 
 3000, 
 120, 
 50, 
 320, 
 50, 
 55, 
 2170, 
 25, 
 70, 
 2960, 
 0, 
 70, 
 350, 
 50, 
 50, 
 1450, 
 50, 
 50, 
 2550, 
 50, 
 50, 
 310, 
 10, 
 45, 
 2592, 
 10, 
 50, 
 3180, 
 10, 
 60, 
 270, 
 25, 
 40, 
 960, 
 78, 
 60, 
 2800, 
 38, 
 70, 
 480, 
 30, 
 40, 
 2760, 
 10, 
 70, 
 1900, 
 114, 
 60, 
 350, 
 50, 
 55, 
 1, 
 85, 
 40, 
 2600, 
 35, 
 40, 
 450, 
 24, 
 35, 
 2100, 
 60, 
 35, 
 3200, 
 35, 
 45, 
 594, 
 10, 
 30, 
 2222, 
 10, 
 25, 
 2978, 
 10, 
 25, 
 195, 
 10, 
 30, 
 2039, 
 50, 
 60, 
 2735, 
 50, 
 30, 
 280, 
 50, 
 60, 
 2050, 
 37, 
 70, 
 2150, 
 70, 
 70, 
 290, 
 80, 
 40, 
 2143, 
 69, 
 50, 
 3000, 
 27, 
 70, 
 290, 
 80, 
 40, 
 2143, 
 69, 
 50, 
 2143, 
 69, 
 50, 
 280, 
 80, 
 20, 
 1500, 
 50, 
 30, 
 2500, 
 50, 
 30, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 350, 
 10, 
 2800, 
 480, 
 30, 
 35, 
 40, 
 83, 
 40, 
 2400, 
 48, 
 30, 
 450, 
 60, 
 45, 
 1800, 
 0, 
 75, 
 3200, 
 0, 
 30, 
 244, 
 10, 
 30, 
 2039, 
 50, 
 60, 
 2665, 
 30, 
 40, 
 280, 
 60, 
 30, 
 550, 
 78, 
 30, 
 2100, 
 82, 
 40, 
 390, 
 40, 
 40, 
 1800, 
 40, 
 50, 
 3070, 
 0, 
 70, 
 767, 
 10, 
 30, 
 1652, 
 10, 
 50, 
 2891, 
 10, 
 50, 
 240, 
 30, 
 30, 
 1065, 
 30, 
 45, 
 2506, 
 20, 
 45, 
 594, 
 10, 
 40, 
 2141, 
 10, 
 50, 
 3059, 
 10, 
 50, 
 220, 
 10, 
 55, 
 1900, 
 10, 
 55, 
 2200, 
 10, 
 55, 
 380, 
 40, 
 55, 
 1900, 
 10, 
 70, 
 3200, 
 10, 
 70, 
 260, 
 50, 
 35, 
 1240, 
 8, 
 30, 
 1900, 
 65, 
 40, 
 150, 
 50, 
 35, 
 890, 
 80, 
 30, 
 1570, 
 88, 
 40, 
 180, 
 56, 
 70, 
 2200, 
 0, 
 100, 
 2850, 
 0, 
 70, 
 270, 
 33, 
 45, 
 2050, 
 40, 
 80, 
 2790, 
 0, 
 50, 
 210, 
 46, 
 45, 
 1800, 
 0, 
 80, 
 2300, 
 0, 
 90, 
 510, 
 0, 
 50, 
 1900, 
 0, 
 80, 
 2370, 
 0, 
 80, 
 320, 
 50, 
 55, 
 2200, 
 0, 
 70, 
 3000, 
 100, 
 70, 
 350, 
 50, 
 50, 
 1450, 
 50, 
 50, 
 2550, 
 50, 
 50, 
 350, 
 10, 
 50, 
 2074, 
 10, 
 50, 
 2588, 
 10, 
 50, 
 270, 
 25, 
 45, 
 1800, 
 0, 
 80, 
 2800, 
 0, 
 70, 
 500, 
 30, 
 40, 
 1530, 
 10, 
 70, 
 2700, 
 20, 
 70, 
 350, 
 75, 
 30, 
 1, 
 84, 
 30, 
 2000, 
 65, 
 40, 
 450, 
 22, 
 30, 
 2200, 
 65, 
 75, 
 3140, 
 30, 
 60, 
 679, 
 10, 
 35, 
 1343, 
 10, 
 25, 
 2861, 
 10, 
 30, 
 244, 
 10, 
 30, 
 2039, 
 50, 
 60, 
 2665, 
 30, 
 40, 
 280, 
 50, 
 65, 
 2050, 
 0, 
 70, 
 2700, 
 0, 
 80, 
 308, 
 54, 
 50, 
 1800, 
 43, 
 40, 
 3000, 
 18, 
 65, 
 308, 
 54, 
 50, 
 1800, 
 43, 
 40, 
 3000, 
 18, 
 65, 
 280, 
 80, 
 20, 
 1550, 
 50, 
 30, 
 2600, 
 50, 
 30, 
 350, 
 10, 
 30, 
 1200, 
 10, 
 30, 
 2800, 
 10, 
 30, 
 480, 
 30, 
 35, 
 40, 
 83, 
 40, 
 2400, 
 48, 
 30, 
 450, 
 30, 
 60, 
 1700, 
 70, 
 35, 
 2800, 
 0, 
 80, 
 181, 
 10, 
 30, 
 2000, 
 10, 
 1000, 
 2520, 
 30, 
 30, 
 390, 
 10, 
 60, 
 1096, 
 10, 
 60, 
 2100, 
 82, 
 40, 
 390, 
 40, 
 40, 
 1900, 
 15, 
 60, 
 2880, 
 0, 
 65, 
 220, 
 80, 
 20, 
 2200, 
 80, 
 90, 
 -1, 
 -1, 
 -1, 
 496, 
 10, 
 50, 
 1672, 
 10, 
 50, 
 2858, 
 10, 
 50, 
 240, 
 15, 
 30, 
 708, 
 15, 
 30, 
 2100, 
 20, 
 25, 
 500, 
 10, 
 45, 
 1615, 
 10, 
 47, 
 2818, 
 10, 
 50, 
 200, 
 30, 
 50, 
 1100, 
 20, 
 30, 
 2400, 
 10, 
 40, 
 380, 
 32, 
 55, 
 2200, 
 0, 
 90, 
 2900, 
 20, 
 100, 
 260, 
 50, 
 35, 
 1240, 
 8, 
 30, 
 1900, 
 65, 
 40, 
 150, 
 50, 
 35, 
 890, 
 80, 
 30, 
 1570, 
 88, 
 40, 
 180, 
 56, 
 65, 
 2600, 
 40, 
 100, 
 2850, 
 0, 
 90, 
 270, 
 33, 
 40, 
 1900, 
 40, 
 80, 
 2700, 
 20, 
 80, 
 210, 
 46, 
 35, 
 1710, 
 71, 
 65, 
 2300, 
 0, 
 80, 
 240, 
 43, 
 40, 
 1710, 
 71, 
 65, 
 2300, 
 0, 
 80, 
 320, 
 50, 
 55, 
 2200, 
 0, 
 90, 
 2800, 
 50, 
 100, 
 350, 
 50, 
 50, 
 1450, 
 50, 
 50, 
 2550, 
 50, 
 50, 
 400, 
 10, 
 45, 
 1184, 
 10, 
 50, 
 2632, 
 10, 
 70, 
 270, 
 25, 
 40, 
 1900, 
 10, 
 80, 
 2800, 
 0, 
 65, 
 480, 
 30, 
 40, 
 750, 
 120, 
 70, 
 2750, 
 33, 
 70, 
 350, 
 75, 
 30, 
 1, 
 84, 
 30, 
 2000, 
 65, 
 40, 
 450, 
 25, 
 30, 
 2160, 
 65, 
 80, 
 2800, 
 30, 
 80, 
 443, 
 10, 
 30, 
 962, 
 10, 
 40, 
 2704, 
 10, 
 30, 
 181, 
 10, 
 30, 
 2039, 
 50, 
 60, 
 2520, 
 30, 
 30, 
 280, 
 50, 
 50, 
 2050, 
 15, 
 80, 
 2500, 
 0, 
 95, 
 290, 
 41, 
 40, 
 2032, 
 64, 
 40, 
 3000, 
 31, 
 60, 
 290, 
 41, 
 40, 
 2032, 
 64, 
 40, 
 3000, 
 31, 
 60, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 0, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 -1, 
 0 };
